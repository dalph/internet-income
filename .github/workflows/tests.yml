name: Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          DB_NAME: internet_income_test
          DB_USER: internet_income
          DB_PASSWORD: password
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        ports:
          - 3306:3306

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, intl, mysql, pdo_mysql, gd, zip, xdebug
        coverage: xdebug

    - name: Install MySQL client
      run: sudo apt-get update && sudo apt-get install -y mysql-client

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Setup application
      run: |
        cp environments/dev/common/config/main-local.php common/config/
        cp environments/dev/common/config/params-local.php common/config/
        cp environments/dev/common/config/test-local.php common/config/
        cp environments/dev/common/config/codeception-local.php common/config/
        cp environments/dev/console/config/main-local.php console/config/
        cp environments/dev/console/config/params-local.php console/config/
        cp environments/dev/console/config/test-local.php console/config/
        cp environments/dev/backend/config/main-local.php backend/config/
        cp environments/dev/backend/config/params-local.php backend/config/
        cp environments/dev/backend/config/test-local.php backend/config/
        cp environments/dev/backend/config/codeception-local.php backend/config/
        cp environments/dev/frontend/config/main-local.php frontend/config/
        cp environments/dev/frontend/config/params-local.php frontend/config/
        cp environments/dev/frontend/config/test-local.php frontend/config/
        cp environments/dev/frontend/config/codeception-local.php frontend/config/

    - name: Wait for MySQL to be ready
      run: |
        while ! mysqladmin ping -h"127.0.0.1" -P"3306" --silent; do
          sleep 1
        done

    - name: Create database and user
      run: |
        mysql -h 127.0.0.1 -P 3306 -u root -ppassword -e "
          CREATE DATABASE IF NOT EXISTS internet_income_test;
          CREATE USER IF NOT EXISTS 'internet_income'@'%' IDENTIFIED BY 'password';
          GRANT ALL PRIVILEGES ON internet_income_test.* TO 'internet_income'@'%';
          FLUSH PRIVILEGES;
        "

    - name: Run database migrations
      env:
        DB_HOST: 127.0.0.1
        DB_NAME: internet_income_test
        DB_USER: internet_income
        DB_PASSWORD: password
      run: php yii_test migrate --interactive=0

    - name: Run frontend unit tests
      env:
        DB_HOST: 127.0.0.1
        DB_NAME: internet_income_test
        DB_USER: internet_income
        DB_PASSWORD: password
      run: vendor/bin/codecept run unit -c frontend

    - name: Run backend unit tests
      env:
        DB_HOST: 127.0.0.1
        DB_NAME: internet_income_test
        DB_USER: internet_income
        DB_PASSWORD: password
      run: vendor/bin/codecept run unit -c backend

    - name: Run tests with coverage
      env:
        DB_HOST: 127.0.0.1
        DB_NAME: internet_income_test
        DB_USER: internet_income
        DB_PASSWORD: password
      run: vendor/bin/codecept run unit --coverage --coverage-html --coverage-xml -c common

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        files: ./common/tests/_output/coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true 